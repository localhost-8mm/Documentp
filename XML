
Set A: 
1) Write a script to create XML file named “Course.xml” <Course> 
 <Computer Science> 
 <Student name>.......</Student name> 
 <Class name>......</Class name> 
 <percentage>.....</percentage> </Computer 
Science> 
</Course> 
Store the details of 5 students who are in TYBSc. 
:--------------------------
<?xml version="1.0" encoding="UTF-8"?>
<Course>

<ComputerScience>
<StudentName>Alice</StudentName>
<ClassName>TYBSc</ClassName>
<Percentage>85</Percentage>
</ComputerScience>

<ComputerScience>
<StudentName>Bob</StudentName>
<ClassName>TYBSc</ClassName>
<Percentage>78</Percentage>
</ComputerScience>

<ComputerScience>
<StudentName>Charlie</StudentName>
<ClassName>TYBSc</ClassName>
<Percentage>92</Percentage>
</ComputerScience>

<ComputerScience>
<StudentName>David</StudentName>
<ClassName>TYBSc</ClassName>
<Percentage>88</Percentage>
</ComputerScience>

<ComputerScience>
<StudentName>Eve</StudentName>
<ClassName>TYBSc</ClassName>
<Percentage>80</Percentage>
</ComputerScience>

</Course>


===============================================================================================================
2) Link “Course.xml” file to the CSS style sheet and get well formatted output 
as given below 
/////TABLE IS GIVEEN\\\\\
PropertyName	StudentName	ClassName	       Percentage
Color        	Blue	      Green	              Red	
Font-family	 Bodoni MT	Arial, Helvetica,
                           sans-serif	       Impact, Charcoal, sans-serif	
Font-style	   Italic	    Normal	          Oblique	
Fontzize	   16 pts	     12 pts	           14 pts	
:--------------------------
XML:-
<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="style.css"?>
<Courses>
    <table>
        <tr>
            <th>PropertyName</th>
            <th>StudentName</th>
            <th>ClassName</th>
            <th>Percentage</th>
        </tr>
        <tr>
            <td>Color</td>
            <td>Blue</td>
            <td>Green</td>
            <td>Red</td>
        </tr>
        <tr>
            <td>Font-family</td>
            <td>Bodoni MT</td>
            <td>Arial, Helvetica, sans-serif</td>
            <td>Impact, Charcoal, sans-serif</td>
        </tr>
        <tr>
            <td>Font-style</td>
            <td>Italic</td>
            <td>Normal</td>
            <td>Oblique</td>
        </tr>
        <tr>
            <td>Font-size</td>
            <td>16 pts</td>
            <td>12 pts</td>
            <td>14 pts</td>
        </tr>
    </table>
</Courses>
------------------------

style. CSS:--
table {
    width: 80%;
    border-collapse: collapse;
    margin: 20px auto;
}

th, td {
    border: 1px solid black;
    padding: 10px;
    text-align: center;
}

th {
    background-color: lightgray;
    font-weight: bold;
}

tr:nth-child(even) {
    background-color: #f2f2f2;
}


===============================================================================================================
Set B: 
1) Write PHP script to generate an XML code in the following format 
<?xml version="1.0" encoding="ISO-8859-1" ?> 
<CD Store> 
 <Movie> 
 <Title>Mr. India</Title> 
 <Release Year>1987</ Release Year > 
 </Movie> 
 <Movie> 
 <Title>Holiday</Title> 
 <Release Year>2014</ Release Year > 
 </Movie> 
 <Movie> 
 <Title>LOC</Title> 
 <Release Year>2003</ Release Year > 
 </Movie> 
 </CD Store> 
 :--------------------------
<?php
// Create XML root element
$cdStore = new SimpleXMLElement("<CD_Store/>");

// Add first movie
$movie = $cdStore->addChild("Movie");
$movie->addChild("Title", "Mr. India");
$movie->addChild("Release_Year", "1987");

// Add second movie
$movie = $cdStore->addChild("Movie");
$movie->addChild("Title", "Holiday");
$movie->addChild("Release_Year", "2014");

// Add third movie
$movie = $cdStore->addChild("Movie");
$movie->addChild("Title", "LOC");
$movie->addChild("Release_Year", "2003");

// Save XML to a file
$cdStore->asXML("CD_Store.xml");

// Display XML output in browser
header("Content-Type: text/xml");
echo $cdStore->asXML();
?>


===============================================================================================================
2) Create a XML file which gives details of movies available in 
“Mayanagari CD Store” from following categories a) Classical b) Action c) Horror 
Elements in each category are in the following format <Category> 
 <Movie Name>----</Movie Name> 
 <Release Year>----</Release Year> </Category> Save 
the file with name “movies.xml”. 
:--------------------------
catalogue.xml

<?xml version="1.0" ?>
<?xml-stylesheet type="text/css" href="catlogue.css"?>
<CATALOG>
<CD code="B1">
<TITLE>Empire Burlesque</TITLE>
<ARTIST>Bob Dylan</ARTIST>
<COUNTRY>USA</COUNTRY>
<COMPANY>Columbia</COMPANY>
<PRICE>10.90</PRICE>
<YEAR>1985</YEAR>
</CD>
<CD code="B2">
<TITLE>Hide your heart</TITLE>
<ARTIST>Bonnie Tyler</ARTIST>
<COUNTRY>UK</COUNTRY>
<COMPANY>CBS Records</COMPANY>
<PRICE>9.90</PRICE>
<YEAR>1988</YEAR>
</CD>
</CATALOG>

-------------
Catalogue.php
<html>
<head>
<link rel="stylesheet" type="text/css" href="catlogue.css">
</head>
<body>
<?php
$xml=simplexml_load_file('catlogue.xml')or die("cannot die");
?>
<center>
</b>CD details</b></center>
<table border="1">
<th>CD code</th>
<th>Title</th>
<th>ARTIST</th>
<th>COUNTRY</th>
<th>COMPANY</th>
<th>PRICE</th>
<th>Year</th>
<?php
foreach($xml->CD as $a)
{
echo"<tr><td>".$a['code']."</td>";
echo"<td>".$a->TITLE."</td>";
echo"<td>".$a->ARTIST."</td>";
echo"<td>".$a->COUNTRY."</td>";
echo"<td>".$a->COMPANY."</td>";
echo"<td>".$a->PRICE."</td>";
echo"<td>".$a->YEAR."</td>
</tr>";
}
?>
</table>
</body>
</html>
-----------
catlogue.css
table th{color:blue; font-size: 20pt;}
table td{color:green; font-size: 20pt;}
===============================================================================================================
Set C : 
1) Create an application that reads “book.xml” file into simple XML object. 
Display attributes and elements (Hint:simple_xml_load_file() function) 
:--------------------------

Php file -
<?php
$xml=simplexml_load_file("Book.xml") or die("eror:cannot create object");
var_dump($xml);
?>

===============================================================================================================
2) Write a script to create “cricket.xml” file with multiple elements as given 
below <Cricket team> <Country = India> 
<Player Name >-------- <Player Name > 
 <Wickets>--------- </Wickets> <Runs>------ --</Runs> 
</Country> 
</Cricket team> 
Also add country = “England” and its element
:--------------------------
cricket.xml:-
<?xml version="1.0" encoding="UTF-8"?>
<Cricket_Team>
    <Country name="India">
        <Player>
            <Name>Virat Kohli</Name>
            <Wickets>4</Wickets>
            <Runs>12000</Runs>
        </Player>
        <Player>
            <Name>Jasprit Bumrah</Name>
            <Wickets>200</Wickets>
            <Runs>500</Runs>
        </Player>
    </Country>
    <Country name="England">
        <Player>
            <Name>Joe Root</Name>
            <Wickets>10</Wickets>
            <Runs>10000</Runs>
        </Player>
        <Player>
            <Name>Jofra Archer</Name>
            <Wickets>150</Wickets>
            <Runs>700</Runs>
        </Player>
    </Country>
</Cricket_Team>


===============================================================================================================
